#Task1- Check for and clean dirty data: Find out if the film table and the customer 
table contain any dirty data, specifically non-uniform or duplicate data, or missing values. 

#Duplicates - none was found 
SELECT title,
       release_year,
       language_id,
       rental_duration,
	   rental_rate,
	   description,
       COUNT(*)
FROM film
GROUP BY title,
       release_year,
       language_id,
       rental_duration,
	   rental_rate,
	   description
HAVING COUNT(*) >1;

#Non-Uniform Data search

SELECT DISTINCT rental_duration
FROM film
SELECT DISTINCT rating
FROM film

SELECT DISTINCT release_year
FROM film

SELECT DISTINCT rental_rate
FROM film


Missing data - nothing was found

SELECT 
       release_year,
       language_id,
       rental_duration,
	   rental_rate,
	   description --col3 ignored in select because it has a lot of missing values
FROM film


#Task 2 Summarize your data: Use SQL to calculate descriptive statistics for both the film table and the customer table. 
#For numerical columns, this means finding the minimum, maximum, and average values. 
#For non-numerical columns, calculate the mode value.

#film table
SELECT MIN(rental_rate) AS min_rent,
       MAX(rental_rate) AS max_rent,
       AVG(rental_rate) AS avg_rent,
       COUNT(rental_rate) AS count_rent_values,
       COUNT(*) AS count_rows
FROM film;

SELECT MIN(rental_duration) AS min_rental_duration,
       MAX(rental_duration) AS max_rental_duration,
       AVG(rental_duration) AS avg_rental_duration,
       COUNT(rental_duration) AS count_rental_duration_values,
       COUNT(*) AS count_rows
FROM film;


SELECT MIN(release_year) AS min_release_year,
       MAX(release_year) AS max_release_year,
       AVG(release_year) AS avg_release_year,
       COUNT(release_year) AS count_release_year_values,
       COUNT(*) AS count_rows
FROM film;

SELECT MIN(length) AS min_length,
       MAX(length) AS max_length,
       AVG(length) AS avg_length,
       COUNT(length) AS count_length_values,
       COUNT(*) AS count_rows
FROM film;


SELECT MIN(replacement_cost) AS min_replacement_cost,
       MAX(replacement_cost) AS max_replacement_cost,
       AVG(replacement_cost) AS avg_replacement_cost,
       COUNT(replacement_cost) AS count_replacement_cost_values,
       COUNT(*) AS count_rows
FROM film;


SELECT MODE() WITHIN GROUP (ORDER BY rating)
       AS modal_value
FROM film;

SELECT MODE() WITHIN GROUP (ORDER BY title)
       AS modal_value
FROM film;


#customer table
SELECT MODE() WITHIN GROUP (ORDER BY first_name)
       AS modal_value
FROM customer;

SELECT MODE() WITHIN GROUP (ORDER BY last_name)
       AS modal_value
FROM customer;

SELECT MODE() WITHIN GROUP (ORDER BY email)
       AS modal_value
FROM customer;
